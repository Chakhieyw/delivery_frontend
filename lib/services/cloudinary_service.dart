import 'dart:io';
import 'dart:convert';
import 'package:image_picker/image_picker.dart';
import 'package:http/http.dart' as http;

/// üå§Ô∏è ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏Ç‡∏∂‡πâ‡∏ô Cloudinary (‡πÉ‡∏ä‡πâ preset ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: delivery_upload)
class CloudinaryService {
  static const String cloudName = "dwew1qkvb"; // üëà Cloud ‡∏Ç‡∏≠‡∏á‡∏Å‡πâ‡∏≠‡∏á‡∏†‡∏û
  static const String uploadPreset =
      "delivery_upload"; // üëà ‡πÉ‡∏ä‡πâ preset ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

  /// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏Ç‡∏∂‡πâ‡∏ô Cloudinary
  /// [fromCamera] = true ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á, false ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ
  /// [file] = ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î picker ‡∏ã‡πâ‡∏≥
  /// [folder] = ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô Cloudinary ‡πÄ‡∏ä‡πà‡∏ô "profiles" / "riders"
  static Future<String?> uploadImage({
    bool fromCamera = true,
    File? file,
    String? folder,
  }) async {
    try {
      File? uploadFile = file;

      // üîπ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î picker (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ)
      if (uploadFile == null) {
        final picker = ImagePicker();
        final picked = await picker.pickImage(
          source: fromCamera ? ImageSource.camera : ImageSource.gallery,
          imageQuality: 80,
        );
        if (picked == null) return null;
        uploadFile = File(picked.path);
      }

      final uri =
          Uri.parse("https://api.cloudinary.com/v1_1/$cloudName/image/upload");

      final request = http.MultipartRequest('POST', uri)
        ..fields['upload_preset'] = uploadPreset
        ..files.add(await http.MultipartFile.fromPath('file', uploadFile.path));

      // üëá ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ folder ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° field 'folder'
      if (folder != null && folder.isNotEmpty) {
        request.fields['folder'] = folder;
      }

      final response = await request.send();
      final body = await response.stream.bytesToString();

      if (response.statusCode != 200 && response.statusCode != 201) {
        print("‚ùå Upload failed: ${response.statusCode}");
        print(body);
        return null;
      }

      final data = jsonDecode(body);
      print("‚úÖ Uploaded to Cloudinary: ${data['secure_url']}");
      return data['secure_url'];
    } catch (e) {
      print("‚ö†Ô∏è Cloudinary upload error: $e");
      return null;
    }
  }
}
